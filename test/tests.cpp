// Test definitions. Do NOT edit this file!

#include <tuple>

#define CATCH_CONFIG_MAIN // defines main() automatically
#include "catch_amalgamated.hpp"

#include "../Complejo.hpp" // student implementations

// =====================
// tests for exercise 1
// ---------------------

TEST_CASE("Ex1", "[Probando constructor default]")
{
    Complejo comp1;
    SECTION("Verificando sus atributos iniciales")
    {
        REQUIRE(comp1.getReal()==0);
        REQUIRE(comp1.getImaginario()==0);
    }
}

// =====================
// tests for exercise 2
// ---------------------

TEST_CASE("Ex2", "[Probando constructor con parámetros]")
{
    Complejo comp1(2,-4);
    SECTION("Verificando sus atributos iniciales")
    {
        REQUIRE(comp1.getReal() == 2);
        REQUIRE(comp1.getImaginario() == -4);
    }
}

TEST_CASE("Ex3", "[Probando setters]")
{
    Complejo nuevo;
    SECTION("Verificando cambios en los atributos")
    {
        nuevo.setReal(-5);
        nuevo.setImaginario(1);
        REQUIRE(nuevo.getReal() == -5);
        REQUIRE(nuevo.getImaginario() == 1);
    }
}

TEST_CASE("Ex4", "[Probando Imprimir]")
{
    Complejo c2(5,6);
    SECTION("Mostrando en consola los datos de la Posicion")
    {
        c2.imprime();
        REQUIRE(true);
    }
}

TEST_CASE("Ex5", "[Probando agregar]")
{
    Complejo c1(2,4);
    Complejo c2(3,-1);
    c1.agregar(c2);
    SECTION("Probando agregar")
    {
        REQUIRE(c1.getReal()==5);
        REQUIRE(c1.getImaginario()==3);
    }
}

TEST_CASE("Ex6", "[Probando conjugado]")
{
    Complejo c1(5,3);
    Complejo c2 = c1.conjugado();
    SECTION("Probando conjugado")
    {
        REQUIRE(c2.getReal() == 5);
        REQUIRE(c2.getImaginario() == -3);
    }
}

TEST_CASE("Ex7", "[Probando suma]")
{
    Complejo c1(5,3);
    Complejo c2(-4,-7);
    Complejo c3 = c1.suma(c2);
    SECTION("Probando suma")
    {
        REQUIRE(c3.getReal() == 1);
        REQUIRE(c3.getImaginario() == -4);
    }
}

TEST_CASE("Ex8", "[Probando multiplicación]")
{
    Complejo c1(5, 2);
    Complejo c2(3,-4);
    Complejo c3 = c1.multiplicacion(c2);
    SECTION("Probando multiplicación")
    {
        REQUIRE(c3.getReal() == 23);
        REQUIRE(c3.getImaginario() == -14);
    }
}

TEST_CASE("Ex9", "[Probando multiplicación escalar]")
{
    Complejo c1(5,-2);
    Complejo c3 = c1.multiEscalar(2);
    SECTION("Probando multiplicación escalar")
    {
        REQUIRE(c3.getReal() == 10);
        REQUIRE(c3.getImaginario() == -4);
    }
}



